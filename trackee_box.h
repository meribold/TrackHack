#ifndef TRACKEE_BOX_H
#define TRACKEE_BOX_H

#include <string>

#include <wx/listbox.h>
#include <wx/panel.h>
#include <wx/textctrl.h>

wxDECLARE_EVENT(myEVT_COMMAND_TRACKEEBOX_ADDED, wxCommandEvent);

// Posted when an item in the ListBox is deleted
wxDECLARE_EVENT(myEVT_COMMAND_TRACKEEBOX_DELETED, wxCommandEvent);

// Events emitted by this class:
//    custom wxCommandEvent with Id myEVT_COMMAND_TRACKEEBOX_ADDED
//    custom wxCommandEvent with Id myEVT_COMMAND_TRACKEEBOX_DELETED
//    wxCommandEvent with Id wxEVT_COMMAND_LISTBOX_SELECTED
//    wxCommand Event with Id wxEVT_COMMAND_TEXT_ENTER
class TrackeeBox : public wxPanel
{
   public:

   TrackeeBox(wxWindow* parent, wxWindowID = wxID_ANY, const wxPoint& = wxDefaultPosition,
      const wxSize& = wxDefaultSize);

   std::string addTrackee();

   void deleteTrackee(unsigned);

   void deleteSelection();

   void reset();

   wxString getStringSelection() const;

   private:

   // Processes wxEVT_SET_FOCUS and wxEVT_KILL_FOCUS for textCtrl.
   void onFocus(wxFocusEvent&);

   // Processes wxEVT_COMMAND_TEXT_ENTER, posted by *textCtrl. Propagated up to the parent
   // window after the call. If an item is added to *listBox it will also be selected, but
   // no selection event will be triggered.
   void onEnter(wxCommandEvent&);

   // processes a wxEVT_COMMAND_LISTBOX_SELECTED; generated by *listBox
   //void onSelected(wxCommandEvent&);

   // Responds to a wxEVT_KEY_UP event emitted by the ListBox; deletes items for
   // wxKeyEvent keycode WXK_DELETE and posts myEVT_COMMAND_TRACKEEBOX_DELETED.
   void onKeyUp(wxKeyEvent&);

   void onContextMenu(wxContextMenuEvent&); // process a wxEVT_CONTEXT_MENU

   void suggestId();

   wxBoxSizer* vBox;

   wxTextCtrl* textCtrl;
   wxListBox* listBox;
};

#endif //TRACKEE_BOX_H

// vim: tw=90 sw=3 et
